/* Generated By:JJTree&JavaCC: Do not edit this line. CompilerConstants.java */

/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CompilerConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int K_DO = 6;
  /** RegularExpression Id. */
  int K_DOUBLE = 7;
  /** RegularExpression Id. */
  int K_ELSE = 8;
  /** RegularExpression Id. */
  int K_EXIT = 9;
  /** RegularExpression Id. */
  int K_FUNCTION = 10;
  /** RegularExpression Id. */
  int K_IF = 11;
  /** RegularExpression Id. */
  int K_INTEGER = 12;
  /** RegularExpression Id. */
  int K_PRINT_DOUBLE = 13;
  /** RegularExpression Id. */
  int K_PRINT_INTEGER = 14;
  /** RegularExpression Id. */
  int K_PRINT_STRING = 15;
  /** RegularExpression Id. */
  int K_PROCEDURE = 16;
  /** RegularExpression Id. */
  int K_PROGRAM = 17;
  /** RegularExpression Id. */
  int K_READ_DOUBLE = 18;
  /** RegularExpression Id. */
  int K_READ_INTEGER = 19;
  /** RegularExpression Id. */
  int K_READ_STRING = 20;
  /** RegularExpression Id. */
  int K_RETURN = 21;
  /** RegularExpression Id. */
  int K_STRING = 22;
  /** RegularExpression Id. */
  int K_THEN = 23;
  /** RegularExpression Id. */
  int K_WHILE = 24;
  /** RegularExpression Id. */
  int K_ASSIGN = 25;
  /** RegularExpression Id. */
  int K_ASSIGN_PLUS = 26;
  /** RegularExpression Id. */
  int K_ASSIGN_MINUS = 27;
  /** RegularExpression Id. */
  int K_ASSIGN_MULTIPLY = 28;
  /** RegularExpression Id. */
  int K_ASSIGN_DIVIDE = 29;
  /** RegularExpression Id. */
  int K_ASSIGN_MOD = 30;
  /** RegularExpression Id. */
  int K_COMMA = 31;
  /** RegularExpression Id. */
  int K_COMMENT = 32;
  /** RegularExpression Id. */
  int K_DAND = 33;
  /** RegularExpression Id. */
  int K_DIVIDE = 34;
  /** RegularExpression Id. */
  int K_DOR = 35;
  /** RegularExpression Id. */
  int K_DEQ = 36;
  /** RegularExpression Id. */
  int K_GEQ = 37;
  /** RegularExpression Id. */
  int K_GT = 38;
  /** RegularExpression Id. */
  int K_LBRACKET = 39;
  /** RegularExpression Id. */
  int K_LEQ = 40;
  /** RegularExpression Id. */
  int K_LCURLY = 41;
  /** RegularExpression Id. */
  int K_LPAREN = 42;
  /** RegularExpression Id. */
  int K_LT = 43;
  /** RegularExpression Id. */
  int K_MINUS = 44;
  /** RegularExpression Id. */
  int K_DECREMENT = 45;
  /** RegularExpression Id. */
  int K_MOD = 46;
  /** RegularExpression Id. */
  int K_MULTIPLY = 47;
  /** RegularExpression Id. */
  int K_NE = 48;
  /** RegularExpression Id. */
  int K_NOT = 49;
  /** RegularExpression Id. */
  int K_PERIOD = 50;
  /** RegularExpression Id. */
  int K_PLUS = 51;
  /** RegularExpression Id. */
  int K_INCREMENT = 52;
  /** RegularExpression Id. */
  int K_RBRACKET = 53;
  /** RegularExpression Id. */
  int K_RCURLY = 54;
  /** RegularExpression Id. */
  int K_RPAREN = 55;
  /** RegularExpression Id. */
  int K_SEMI = 56;
  /** RegularExpression Id. */
  int IDENTIFIER = 57;
  /** RegularExpression Id. */
  int ICONSTANT = 58;
  /** RegularExpression Id. */
  int SCONSTANT = 59;
  /** RegularExpression Id. */
  int DCONSTANT = 60;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"do\"",
    "\"double\"",
    "\"else\"",
    "\"exit\"",
    "\"function\"",
    "\"if\"",
    "\"integer\"",
    "\"print_double\"",
    "\"print_integer\"",
    "\"print_string\"",
    "\"procedure\"",
    "\"program\"",
    "\"read_double\"",
    "\"read_integer\"",
    "\"read_string\"",
    "\"return\"",
    "\"string\"",
    "\"then\"",
    "\"while\"",
    "\":=\"",
    "\"+=\"",
    "\"-=\"",
    "\"*=\"",
    "\"/=\"",
    "\"%=\"",
    "\",\"",
    "\"//\"",
    "\"&&\"",
    "\"/\"",
    "\"||\"",
    "\"==\"",
    "\">=\"",
    "\">\"",
    "\"[\"",
    "\"<=\"",
    "\"{\"",
    "\"(\"",
    "\"<\"",
    "\"-\"",
    "\"--\"",
    "\"%\"",
    "\"*\"",
    "\"!=\"",
    "\"!\"",
    "\".\"",
    "\"+\"",
    "\"++\"",
    "\"]\"",
    "\"}\"",
    "\")\"",
    "\";\"",
    "<IDENTIFIER>",
    "<ICONSTANT>",
    "<SCONSTANT>",
    "<DCONSTANT>",
  };

}
